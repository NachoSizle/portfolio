---
import type { CollectionEntry } from 'astro:content';
export interface Props {
  project: CollectionEntry<'projects'>;
  index?: number;
  total?: number;
}
const { project, index = 0, total = 1 } = Astro.props;
import { Image } from 'astro:assets';
import { BASE_URL } from '../constants';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { title, description, stack = [], cover, demoLink, repoLink, date } = project.data;
const formattedDate = date?.toLocaleDateString(lang === 'es' ? 'es-ES' : 'en-US', {
  month: 'long',
  year: 'numeric',
});
const projectUrl = `${BASE_URL}/projects/${project.slug}`;
const hasLinks = demoLink || repoLink;
const [primaryTag, ...restStack] = stack;
const supportingTags = restStack.length > 0 ? restStack : stack.slice(1);
const stickyBaseRem = 4;
const stickyIncrementRem = 2;
const stickyTop = `${stickyBaseRem + index * stickyIncrementRem}rem`;
const layerZIndex = 100 - index;

// Calcular si el proyecto es reciente (últimos 6 meses)
const isRecent = date && (new Date().getTime() - date.getTime()) < (6 * 30 * 24 * 60 * 60 * 1000);

// Colores dinámicos por proyecto (inspirado en las tecnologías orbitales)
const projectColors = [
  { from: 'from-blue-500', via: 'via-cyan-400', to: 'to-purple-500', accent: 'bg-blue-500' },
  { from: 'from-emerald-500', via: 'via-green-400', to: 'to-teal-500', accent: 'bg-emerald-500' },
  { from: 'from-orange-500', via: 'via-yellow-400', to: 'to-red-500', accent: 'bg-orange-500' },
  { from: 'from-purple-500', via: 'via-pink-400', to: 'to-indigo-500', accent: 'bg-purple-500' },
  { from: 'from-cyan-500', via: 'via-blue-400', to: 'to-indigo-500', accent: 'bg-cyan-500' },
];
const colorScheme = projectColors[index % projectColors.length];
---
<li class="project-card-stack list-none lg:sticky" style={`--stack-index: ${index}; top: ${stickyTop}; z-index: ${layerZIndex};`}>
  <div class="relative max-w-5xl sm:px-6 mx-auto perspective-2000">
    <!-- Card principal con efecto 3D -->
    <article class={`group relative overflow-hidden rounded-[32px] md:rounded-[48px] p-1 transition-all duration-1000 hover:scale-[1.03] transform-gpu`}>
      
      <!-- Borde animado con gradiente giratorio (contenido dentro) -->
      <div class={`absolute inset-0 rounded-[32px] md:rounded-[48px] bg-gradient-to-r ${colorScheme.from} ${colorScheme.via} ${colorScheme.to} opacity-40 blur-md group-hover:opacity-60 transition-opacity duration-700`}></div>

      <!-- Contenedor interno -->
      <div class="relative bg-white/95 dark:bg-neutral-950/95 backdrop-blur-2xl rounded-[30px] md:rounded-[46px] overflow-hidden border border-white/20 dark:border-neutral-800/30 shadow-2xl">
        
        <!-- Patrón de fondo animado -->
        <div class="absolute inset-0 opacity-5 dark:opacity-10">
          <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, currentColor 1px, transparent 0); background-size: 32px 32px;"></div>
        </div>

        <!-- Elementos orbitales flotantes (inspirados en TechOrbit) -->
        <div class="absolute top-8 right-8 w-24 h-24 opacity-10 group-hover:opacity-30 transition-opacity duration-700">
          <div class={`absolute inset-0 rounded-full bg-gradient-to-br ${colorScheme.from} ${colorScheme.to} animate-spin-slow blur-md`}></div>
          <div class={`absolute inset-4 rounded-full bg-gradient-to-tr ${colorScheme.to} ${colorScheme.from} animate-spin-reverse blur-sm`}></div>
        </div>
        
        <div class="absolute bottom-8 left-8 w-16 h-16 opacity-10 group-hover:opacity-30 transition-opacity duration-1000">
          <div class={`absolute inset-0 rounded-full bg-gradient-to-br ${colorScheme.via} ${colorScheme.to} animate-pulse blur-lg`}></div>
        </div>

        <!-- Orbes flotantes decorativos -->
        <div class={`absolute -top-6 right-1/4 w-3 h-3 ${colorScheme.accent} rounded-full opacity-0 group-hover:opacity-60 transition-all duration-500 animate-float blur-sm`} style="animation-delay: 0.1s;"></div>
        <div class={`absolute top-1/3 -right-2 w-2 h-2 ${colorScheme.accent} rounded-full opacity-0 group-hover:opacity-40 transition-all duration-700 animate-float blur-sm`} style="animation-delay: 0.3s;"></div>
        <div class={`absolute bottom-1/4 -left-3 w-4 h-4 ${colorScheme.accent} rounded-full opacity-0 group-hover:opacity-50 transition-all duration-900 animate-float blur-md`} style="animation-delay: 0.5s;"></div>

        <div class="relative p-6 md:p-10 lg:p-12">
          <div class="grid gap-6 md:gap-10 lg:grid-cols-[1fr_auto] lg:items-start">
            
            <!-- Contenido principal -->
            <div class="flex flex-col gap-6 md:gap-8">
              
              <!-- Header con badge y título -->
              <header class="space-y-4 md:space-y-6">
                
                <!-- Badge principal con efecto de brillo -->
                {primaryTag && (
                  <div class="inline-flex">
                    <div class="relative group/badge">
                      <div class={`absolute -inset-2 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} rounded-full opacity-20 group-hover/badge:opacity-40 blur-xl transition-opacity duration-500`}></div>
                      <span class={`relative inline-flex items-center gap-2 md:gap-3 px-4 md:px-6 py-2 md:py-3 rounded-full border-2 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} border-white/20 shadow-2xl select-none transform transition-transform duration-300 hover:scale-110`}>
                        <div class="relative">
                          <div class="w-2.5 md:w-3 h-2.5 md:h-3 bg-white rounded-full animate-pulse shadow-lg"></div>
                          <div class="absolute inset-0 w-2.5 md:w-3 h-2.5 md:h-3 bg-white rounded-full animate-ping"></div>
                        </div>
                        <span class="font-black uppercase tracking-[0.2em] text-white text-xs md:text-sm">
                          {primaryTag}
                        </span>
                      </span>
                    </div>
                  </div>
                )}

                <!-- Título con efecto glitch -->
                <h3 class="text-3xl md:text-4xl lg:text-5xl font-black leading-none select-none">
                  <a
                    href={projectUrl}
                    class="group/title relative inline-flex items-center gap-4 transition-all duration-500 hover:gap-6"
                    aria-label={typeof title === 'string' ? title : String(title)}
                  >
                    <span class={`relative bg-gradient-to-r ${colorScheme.from} ${colorScheme.via} ${colorScheme.to} bg-clip-text text-transparent transition-all duration-500 group-hover/title:tracking-wide leading-12 sm:leading-16`}>
                      {typeof title === 'string' ? title : String(title)}
                      <!-- Subrayado animado triple -->
                      <span class={`absolute -bottom-3 left-0 w-0 h-1 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} transition-all duration-700 group-hover/title:w-full rounded-full`}></span>
                      <span class={`absolute -bottom-3 left-0 w-full h-1 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} scale-x-0 group-hover/title:scale-x-100 transition-transform duration-500 delay-100 rounded-full opacity-60`}></span>
                      <span class={`absolute -bottom-4 left-0 w-full h-0.5 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} scale-x-0 group-hover/title:scale-x-100 transition-transform duration-300 delay-200 rounded-full opacity-30`}></span>
                    </span>
                    
                    <!-- Icono con rotación 3D -->
                    <div class="relative">
                      <svg class={`h-6 md:h-8 w-6 md:w-8 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} bg-clip-text text-transparent transition-all duration-500 group-hover/title:rotate-45 group-hover/title:scale-125 transform-gpu`} fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                      </svg>
                      <div class={`absolute inset-0 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} rounded-full blur-lg opacity-0 group-hover/title:opacity-60 transition-opacity duration-500 -z-10`}></div>
                    </div>
                  </a>
                </h3>

                <!-- Fecha y estado con diseño mejorado -->
                <div class="flex flex-wrap items-center gap-4">
                  {formattedDate && (
                    <div class="inline-flex items-center gap-3 px-4 py-2 rounded-full bg-gradient-to-r from-neutral-100 to-neutral-200 dark:from-neutral-800 dark:to-neutral-900 border border-neutral-200/50 dark:border-neutral-700/50 shadow-lg select-none">
                      <svg class={`h-5 w-5 text-neutral-700 dark:text-white`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                      <span class="font-bold text-neutral-700 dark:text-neutral-300">{formattedDate}</span>
                    </div>
                  )}
                  {isRecent && (
                    <div class="inline-flex items-center gap-3 px-4 py-2 rounded-full bg-gradient-to-r from-emerald-500 to-green-500 border border-white/20 shadow-xl select-none animate-pulse">
                      <div class="relative">
                        <div class="w-2.5 h-2.5 bg-white rounded-full"></div>
                        <div class="absolute inset-0 w-2.5 h-2.5 bg-white rounded-full animate-ping"></div>
                      </div>
                      <span class="font-black text-white text-xs uppercase tracking-widest">✨ Nuevo</span>
                    </div>
                  )}
                </div>
              </header>

              <!-- Descripción con tipografía mejorada -->
              <p class="text-base md:text-xl leading-relaxed text-neutral-600 dark:text-neutral-400 font-medium select-none max-w-2xl">
                {typeof description === 'string' ? description : String(description)}
              </p>
            </div>

            <!-- Imagen con efecto 3D y marco orbital -->
            <div class="relative w-full lg:w-96 group/image order-first lg:order-last">
              
              <!-- Anillos orbitales animados (inspirados en TechOrbit) -->
              <div class="absolute inset-0 -m-8 opacity-0 group-hover:opacity-100 transition-opacity duration-1000">
                <div class={`absolute inset-0 rounded-full border-2 border-dashed opacity-20 animate-spin-slow`}></div>
                <div class={`absolute inset-4 rounded-full border-2 border-dashed opacity-30 animate-spin-reverse`}></div>
              </div>

              <!-- Contenedor de imagen con efecto de levitación -->
              <div class="relative transform transition-all duration-700 group-hover/image:scale-105">
                
                <!-- Borde de gradiente -->
                <div class={`absolute -inset-2 bg-gradient-to-r ${colorScheme.from} ${colorScheme.via} ${colorScheme.to} rounded-[32px] opacity-60 blur-2xl group-hover/image:opacity-100 transition-opacity duration-700`}></div>
                
                <!-- Contenedor de imagen -->
                <div class="relative rounded-[24px] md:rounded-[32px] overflow-hidden border-2 md:border-4 border-white/50 dark:border-neutral-800/50 shadow-2xl">
                  <Image
                    src={cover}
                    alt={lang === 'es' ? `Cover de ${title}` : `Cover of ${title}`}
                    width={1275}
                    height={850}
                    class="w-full h-auto object-cover transition-transform duration-1000 group-hover/image:scale-110"
                  />
                  
                  <!-- Overlay con gradiente -->
                  <div class={`absolute inset-0 bg-gradient-to-t ${colorScheme.from} ${colorScheme.to} opacity-0 group-hover/image:opacity-30 mix-blend-overlay transition-opacity duration-700`}></div>
                  
                  <!-- Efecto de escaneo -->
                  <div class={`absolute inset-0 bg-gradient-to-b from-transparent via-white/20 to-transparent translate-y-full group-hover/image:translate-y-[-100%] transition-transform duration-1000`}></div>
                </div>
              </div>
            </div>

          </div>

          <!-- Stack de tecnologías con diseño orbital -->
          {supportingTags.length > 0 && (
            <div class="w-full space-y-3 md:space-y-2 mt-6">
              <!-- Título y botones -->
              <div class="w-full flex flex-col lg:flex-row items-start lg:items-center justify-between gap-3 md:gap-4">
                <h4 class={`text-xs md:text-sm font-black uppercase tracking-[0.2em] bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} bg-clip-text text-transparent select-none whitespace-nowrap`}>
                  ⚡ Stack Tecnológico
                </h4>
                
                <!-- Botones de acción (visibles en desktop) -->
                {hasLinks && (
                  <div class="hidden lg:flex gap-3 shrink-0">
                    {demoLink && (
                      <a
                        href={demoLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        class={`group/demo relative inline-flex items-center justify-center gap-2 px-6 py-3 rounded-2xl bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} text-white font-black text-sm uppercase tracking-wide shadow-2xl transition-all duration-500 hover:shadow-3xl hover:-translate-y-1 hover:scale-105 select-none overflow-hidden transform-gpu whitespace-nowrap`}
                      >
                        <div class="absolute inset-0 bg-white/20 translate-y-full group-hover/demo:translate-y-0 transition-transform duration-500"></div>
                        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover/demo:translate-x-full transition-transform duration-1000"></div>
                        
                        <svg class="relative z-10 h-5 w-5 transition-transform duration-500 group-hover/demo:rotate-45" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                        </svg>
                        <span class="relative z-10">{t('projects.viewDemo')}</span>
                        <div class="absolute -inset-2 bg-gradient-to-r from-white/40 to-transparent rounded-2xl blur-xl opacity-0 group-hover/demo:opacity-100 transition-opacity duration-500"></div>
                      </a>
                    )}
                    {repoLink && (
                      <a
                        href={repoLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="group/repo relative inline-flex items-center justify-center gap-2 px-6 py-[10px] rounded-2xl bg-white dark:bg-neutral-900 border-2 border-neutral-300 dark:border-neutral-700 text-neutral-900 dark:text-neutral-100 font-black text-sm uppercase tracking-wide shadow-2xl transition-all duration-500 hover:shadow-3xl hover:-translate-y-1 hover:scale-105 hover:border-current select-none overflow-hidden transform-gpu whitespace-nowrap"
                      >
                        <div class={`absolute inset-0 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} opacity-0 group-hover/repo:opacity-10 transition-opacity duration-500`}></div>
                        
                        <svg class="relative z-10 h-5 w-5 transition-transform duration-500 group-hover/repo:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                        </svg>
                        <span class="relative z-10">{t('projects.viewRepository')}</span>
                      </a>
                    )}
                  </div>
                )}
              </div>
              
              <!-- Tags de tecnologías -->
              <div class="flex flex-wrap gap-2 md:gap-3">
                {supportingTags.map((tag, tagIndex) => (
                  <span 
                    class="group/tag relative inline-flex items-center gap-2 px-4 md:px-5 py-2 md:py-2.5 rounded-xl md:rounded-2xl bg-gradient-to-br from-white to-neutral-50 dark:from-neutral-900 dark:to-neutral-800 border border-neutral-200/60 dark:border-neutral-700/60 shadow-xl transition-all duration-500 hover:shadow-2xl hover:-translate-y-1 hover:scale-110 select-none cursor-pointer"
                    style={`animation-delay: ${tagIndex * 0.05}s;`}
                  >
                    <div class={`absolute -inset-0.5 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} rounded-xl md:rounded-2xl opacity-0 group-hover/tag:opacity-100 blur transition-opacity duration-500 -z-10`}></div>
                    <div class={`w-2 md:w-2.5 h-2 md:h-2.5 rounded-full bg-gradient-to-br ${colorScheme.from} ${colorScheme.to} animate-pulse shadow-lg`}></div>
                    <span class="font-bold text-neutral-700 dark:text-neutral-300 text-xs md:text-sm">{tag}</span>
                  </span>
                ))}
              </div>
              
              <!-- Botones de acción (mobile) -->
              {hasLinks && (
                <div class="flex lg:hidden flex-col sm:flex-row gap-3 w-full pt-2">
                    {demoLink && (
                      <a
                        href={demoLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        class={`flex-1 group/demo relative inline-flex items-center justify-center gap-2 px-6 py-3 rounded-2xl bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} text-white font-black text-sm uppercase tracking-wide shadow-2xl transition-all duration-500 hover:shadow-3xl hover:-translate-y-1 hover:scale-105 select-none overflow-hidden transform-gpu`}
                      >
                        <div class="absolute inset-0 bg-white/20 translate-y-full group-hover/demo:translate-y-0 transition-transform duration-500"></div>
                        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover/demo:translate-x-full transition-transform duration-1000"></div>
                        
                        <svg class="relative z-10 h-5 w-5 transition-transform duration-500 group-hover/demo:rotate-45" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                        </svg>
                        <span class="relative z-10">{t('projects.viewDemo')}</span>
                        <div class="absolute -inset-2 bg-gradient-to-r from-white/40 to-transparent rounded-2xl blur-xl opacity-0 group-hover/demo:opacity-100 transition-opacity duration-500"></div>
                      </a>
                    )}
                    {repoLink && (
                      <a
                        href={repoLink}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex-1 group/repo relative inline-flex items-center justify-center gap-2 px-6 py-[10px] rounded-2xl bg-white dark:bg-neutral-900 border-2 border-neutral-300 dark:border-neutral-700 text-neutral-900 dark:text-neutral-100 font-black text-sm uppercase tracking-wide shadow-2xl transition-all duration-500 hover:shadow-3xl hover:-translate-y-1 hover:scale-105 hover:border-current select-none overflow-hidden transform-gpu"
                      >
                        <div class={`absolute inset-0 bg-gradient-to-r ${colorScheme.from} ${colorScheme.to} opacity-0 group-hover/repo:opacity-10 transition-opacity duration-500`}></div>
                        
                        <svg class="relative z-10 h-5 w-5 transition-transform duration-500 group-hover/repo:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                        </svg>
                        <span class="relative z-10">{t('projects.viewRepository')}</span>
                      </a>
                    )}
                  </div>
                )}
            </div>
          )}

        </div>
      </div>
    </article>
  </div>
</li>

<style>
  :global(.project-card-stack) {
    margin-top: 3.25rem;
  }

  :global(.project-card-stack:first-child) {
    margin-top: 0;
  }

  @media (max-width: 1023px) {
    :global(.project-card-stack) {
      margin-top: 2rem !important;
    }

    :global(.project-card-stack:first-child) {
      margin-top: 0 !important;
    }
  }

  /* Animaciones personalizadas */
  @keyframes gradient-rotate {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  @keyframes spin-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes spin-reverse {
    from {
      transform: rotate(360deg);
    }
    to {
      transform: rotate(0deg);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
    }
    25% {
      transform: translateY(-10px) translateX(5px);
    }
    50% {
      transform: translateY(-5px) translateX(-5px);
    }
    75% {
      transform: translateY(-15px) translateX(3px);
    }
  }

  @keyframes bounce-subtle {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  .animate-gradient-rotate {
    animation: gradient-rotate 8s ease infinite;
    background-size: 200% 200%;
  }

  .animate-spin-slow {
    animation: spin-slow 20s linear infinite;
  }

  .animate-spin-reverse {
    animation: spin-reverse 15s linear infinite;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-bounce-subtle {
    animation: bounce-subtle 3s ease-in-out infinite;
  }

  .perspective-2000 {
    perspective: 2000px;
  }

  .transform-gpu {
    transform: translateZ(0);
    backface-visibility: hidden;
  }

  .rotate-x-2 {
    transform: rotateX(2deg);
  }

  /* Efecto glassmorphism mejorado */
  .backdrop-blur-2xl {
    backdrop-filter: blur(40px);
  }
</style>
